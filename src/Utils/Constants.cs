namespace CodeBattles_Backend.Utils;

public static class Constants
{
  static readonly public Dictionary<string, int> TopicId = new()
  {
    { "Array", 1 },
    { "String", 2 },
    { "Hash Table", 3 },
    { "Dynamic Programming", 4 },
    { "Math", 5 },
    { "Sorting", 6 },
    { "Greedy", 7 },
    { "Depth-First Search", 8 },
    { "Binary Search", 9 },
    { "Database", 10 },
    { "Matrix", 11 },
    { "Tree", 12 },
    { "Breadth-First Search", 13 },
    { "Bit Manipulation", 14 },
    { "Two Pointers", 15 },
    { "Prefix Sum", 16 },
    { "Heap (Priority Queue)", 17 },
    { "Simulation", 18 },
    { "Binary Tree", 19 },
    { "Graph", 20 },
    { "Stack", 21 },
    { "Counting", 22 },
    { "Sliding Window", 23 },
    { "Design", 24 },
    { "Enumeration", 25 },
    { "Backtracking", 26 },
    { "Union Find", 27 },
    { "Linked List", 28 },
    { "Number Theory", 29 },
    { "Ordered Set", 30 },
    { "Monotonic Stack", 31 },
    { "Segment Tree", 32 },
    { "Trie", 33 },
    { "Combinatorics", 34 },
    { "Bitmask", 35 },
    { "Divide and Conquer", 36 },
    { "Queue", 37 },
    { "Recursion", 38 },
    { "Geometry", 39 },
    { "Binary Indexed Tree", 40 },
    { "Memoization", 41 },
    { "Hash Function", 42 },
    { "Binary Search Tree", 43 },
    { "Shortest Path", 44 },
    { "String Matching", 45 },
    { "Topological Sort", 46 },
    { "Rolling Hash", 47 },
    { "Game Theory", 48 },
    { "Interactive", 49 },
    { "Data Stream", 50 },
    { "Monotonic Queue", 51 },
    { "Brainteaser", 52 },
    { "Doubly-Linked List", 53 },
    { "Randomized", 54 },
    { "Merge Sort", 55 },
    { "Counting Sort", 56 },
    { "Iterator", 57 },
    { "Concurrency", 58 },
    { "Probability and Statistics", 59 },
    { "Quickselect", 60 },
    { "Suffix Array", 61 },
    { "Line Sweep", 62 },
    { "Minimum Spanning Tree", 63 },
    { "Bucket Sort", 64 },
    { "Shell", 65 },
    { "Reservoir Sampling", 66 },
    { "Strongly Connected Component", 67 },
    { "Eulerian Circuit", 68 },
    { "Radix Sort", 69 },
    { "Rejection Sampling", 70 },
    { "Biconnected Component", 71 }
  };

  static readonly int topicSize = TopicId.Count;

}